{
  "rules": {
    "rumours-test": {
      "$rumour_id": {
        ".validate": "newData.hasChildren(['placeHeard', 'region', 'uid', 'description', 'rumourDate', 'hidden', 'timestamp'])",
        "rumourName": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length < 100"
        },
        "placeHeard": {
          ".validate": "newData.isNumber()"
        },
        "region": {
          ".validate": "newData.isNumber()"
        },
        "township": {
          ".validate": "newData.isNumber()"
        },
        "uid": {
          ".validate": "newData.isString()"
        },
        "description": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length < 1000"
        },
        "rumourTags": {
          "$key1": {
            ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length < 100"
          },
          ".validate": "newData.hasChildren()"
        },
        "rumourDate": {
          ".validate": "newData.isNumber()"
        },
        "hidden": {
          ".validate": "newData.isBoolean()"
        },
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() == now"
        },
        "$other": {
          ".validate": "false"
        },
        ".write": "data.val() == null && auth != null || data.val() != null && newData.val() != null && (auth != null && auth.uid == data.child('uid').val())",
        ".read": "auth != null"
      }
    },
    "user-rumours-test": {
      "$uid": {
        ".write": "data.val() == null && (auth != null && auth.uid == $uid) || data.val() != null && newData.val() != null && (auth != null && auth.uid == $uid)",
        ".read": "auth != null && auth.uid == $uid"
      }
    },
    "tags-test": {
      "$tag": {
        "$key2": {
          ".validate": "newData.isBoolean()"
        },
        ".validate": "newData.hasChildren()",
        ".read": "auth != null",
        ".write": "auth != null"
      }
    }
  }
}
